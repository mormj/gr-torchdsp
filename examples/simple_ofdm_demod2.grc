options:
  parameters:
    author: josh
    catch_exceptions: 'False'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: gen_ofdm
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: const
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 3, 2]'
    type: qpsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 12.0]
    rotation: 0
    state: true
- name: cp_len
  id: variable
  parameters:
    comment: ''
    value: int(fft_len/4)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 20.0]
    rotation: 0
    state: true
- name: fft_len
  id: variable
  parameters:
    comment: ''
    value: '1024'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 12.0]
    rotation: 0
    state: true
- name: noise_level
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: noise_level
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0.0'
    step: '0.01'
    stop: '100.0'
    value: '1.0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1544, 4.0]
    rotation: 0
    state: true
- name: nsyms
  id: variable
  parameters:
    comment: ''
    value: '10000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 20.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '10000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: analog_fastnoise_source_x_0
  id: analog_fastnoise_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: noise_level
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_type: analog.GR_GAUSSIAN
    samples: '8192'
    seed: '0'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 20.0]
    rotation: 0
    state: true
- name: analog_random_source_x_0_1
  id: analog_random_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max: '4'
    maxoutbuf: '0'
    min: '0'
    minoutbuf: '0'
    num_samps: '100000'
    repeat: 'True'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 196.0]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1576, 200.0]
    rotation: 0
    state: true
- name: blocks_char_to_float_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1428.0, 752]
    rotation: 90
    state: enabled
- name: blocks_char_to_float_0_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1064, 1148.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_0
  id: blocks_complex_to_mag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1104, 444.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: fft_len
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 584.0]
    rotation: 0
    state: enabled
- name: blocks_moving_average_xx_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: cp_len
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: 1/100000
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 412.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_conjugate_cc_0
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 432.0]
    rotation: 0
    state: enabled
- name: blocks_peak_detector2_fb_0
  id: blocks_peak_detector2_fb
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.0000001'
    comment: ''
    look_ahead: '1000'
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold_factor_rise: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1284.0, 752]
    rotation: 270
    state: enabled
- name: blocks_stream_to_tagged_stream_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: '"symbol_start"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: fft_len + cp_len
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1720, 108.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_1
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fft_len+cp_len
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 1044.0]
    rotation: 180
    state: enabled
- name: blocks_stream_to_vector_2
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '824'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 164.0]
    rotation: 0
    state: true
- name: blocks_tag_gate_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 580.0]
    rotation: 0
    state: true
- name: blocks_tag_gate_0_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1292.0, 520]
    rotation: 270
    state: enabled
- name: blocks_unpack_k_bits_bb_0
  id: blocks_unpack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '2'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 1124.0]
    rotation: 0
    state: true
- name: blocks_vector_to_stream_0_0
  id: blocks_vector_to_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '824'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 1108.0]
    rotation: 0
    state: true
- name: digital_constellation_decoder_cb_0
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: const
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 1100.0]
    rotation: 0
    state: true
- name: digital_constellation_encoder_bc_1_1
  id: digital_constellation_encoder_bc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: const
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 228.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_cyclic_prefixer_0
  id: digital_ofdm_cyclic_prefixer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: cp_len
    input_size: fft_len
    maxoutbuf: '0'
    minoutbuf: '0'
    rolloff: '0'
    tagname: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1280, 140.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.basic_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, num_samples=1280):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.basic_block.__init__(\n        \
      \    self,\n            name='Embedded Python Block',   # will show up in GRC\n\
      \            in_sig=[np.complex64, np.int8],\n            out_sig=[np.complex64]\n\
      \        )\n        self.set_output_multiple(num_samples)\n        # if an attribute\
      \ with the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.num_samples = num_samples\n\n\n    def\
      \ general_work(self, input_items, output_items):\n        \"\"\"example: multiply\
      \ with constant\"\"\"\n        #print(\"work\")\n \n        nout = 0       \n\
      \        nconsume = 0\n        nin = min(len(output_items[0]), len(input_items[0]),len(input_items[0]))\n\
      \        max_nout = len(output_items[0]) / self.num_samples\n        #print(f\"\
      nin={nin}, max_nout={max_nout}\")\n        for ii in range (nin-self.num_samples):\n\
      \            if input_items[1][ii]:\n                #print(\"a\")\n       \
      \         output_items[0][nout*self.num_samples:(nout+1)*self.num_samples] =\
      \ input_items[0][ii:ii+self.num_samples]\n                #output_items[0][nout*self.num_samples:(nout+1)*self.num_samples]\
      \ = np.ones(self.num_samples,dtype=np.complex64)\n                nout += 1\n\
      \                if nout >= max_nout:\n                   break\n          \
      \  #print(\"b\")\n            nconsume += 1\n        \n        self.consume_each(nconsume)\n\
      \        #print(f\"nout={nout}, nconsume={nconsume}\")\n        return nout*self.num_samples\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_samples: fft_len + cp_len
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('num_samples', '1280')], [('0',
      'complex', 1), ('1', 'byte', 1)], [('0', 'complex', 1)], 'Embedded Python Block
      example - a simple multiply const', ['num_samples'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1064, 1032.0]
    rotation: 180
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, fft_len=1024,\
      \ nsyms=824, pilot_spacing=100):  # only default arguments here\n        \"\"\
      \"arguments to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Embedded Python Block',   # will show\
      \ up in GRC\n            in_sig=[(np.complex64, nsyms)],\n            out_sig=[(np.complex64,\
      \ fft_len)]\n        )\n        self.fft_len = fft_len\n        self.nsyms =\
      \ nsyms\n        self.pilot_spacing=pilot_spacing\n        self.sym = np.zeros(self.fft_len,\
      \ dtype=np.complex64)\n        \n        self.total_syms = nsyms + 1 + nsyms\
      \ // pilot_spacing\n        #print(f'total_syms: {self.total_syms}')\n     \
      \   self.pad_l = (self.fft_len - self.total_syms) // 2\n        self.pad_r =\
      \ self.fft_len - self.pad_l - self.total_syms\n\n    def work(self, input_items,\
      \ output_items):\n        #print(f\"work: {len(input_items[0])}, {len(output_items[0])}\"\
      )\n        #print(f\"input_items[0].shape = {input_items[0].shape}\")\n    \
      \    for ii in range(len(input_items[0])):\n            #print(f\"loop: {ii}:\
      \ {self.fft_len}\")\n            \n            #print(f\"pad_l: {self.pad_l},\
      \ pad_r: {self.pad_r}, {self.fft_len-self.pad_r}, {self.pilot_spacing}\")\n\
      \            self.sym[self.pad_l:(self.fft_len-self.pad_r):self.pilot_spacing]\
      \ = 2+2j\n            idx = self.pad_l+1\n            jj = 0\n            while\
      \ True:\n                n = min(self.pilot_spacing-1, self.nsyms-jj)\n    \
      \            #print(f\"n: {n}, idx:{idx}, jj:{jj}, nsyms:{self.nsyms}, ii:{ii}\"\
      )\n                if n:\n                    #print(len(range(idx,idx+n)))\n\
      \                    #print(len(range((ii*self.nsyms+jj),(ii*self.nsyms+jj+n))))\n\
      \                    self.sym[idx:idx+n] = input_items[0][ii,jj:(jj+n)]\n  \
      \              \n                idx += n+1 # skip over the next pilot\n   \
      \             jj += n\n                \n                if jj >= self.nsyms:\n\
      \                  break\n            \n            output_items[0][ii,:] =\
      \ self.sym\n\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    fft_len: '1024'
    maxoutbuf: '0'
    minoutbuf: '0'
    nsyms: '824'
    pilot_spacing: '100'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('fft_len', '1024'), ('nsyms', '824'),
      ('pilot_spacing', '100')], [('0', 'complex', 824)], [('0', 'complex', 1024)],
      'Embedded Python Block example - a simple multiply const', ['fft_len', 'nsyms',
      'pilot_spacing'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 220.0]
    rotation: 0
    state: true
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: ()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 124.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 28.0]
    rotation: 0
    state: true
- name: ofdm_symbol_rx
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, fft_len=1024,\
      \ cp_len=256, nsyms=824, pilot_spacing=100):  # only default arguments here\n\
      \        \"\"\"arguments to this function show up as parameters in GRC\"\"\"\
      \n        gr.sync_block.__init__(\n            self,\n            name='Embedded\
      \ Python Block',   # will show up in GRC\n            in_sig=[(np.complex64,\
      \ fft_len+cp_len)],\n            out_sig=[(np.complex64, nsyms)]\n        )\n\
      \        \n        #self.set_output_multiple(nsyms-len(range(0,nsyms,pilot_spacing)))\n\
      \        self.fft_len = fft_len\n        self.cp_len = cp_len\n        self.pilot_spacing\
      \ = pilot_spacing\n        \n        self.nsyms = nsyms\n        self.total_syms\
      \ = nsyms + 1 + nsyms // pilot_spacing\n        self.pad_l = (self.fft_len -\
      \ self.total_syms) // 2\n        self.pad_r = self.fft_len - self.pad_l - self.total_syms\n\
      \n\n    def work(self, input_items, output_items):\n        \"\"\"example: multiply\
      \ with constant\"\"\"\n        #print(\"work\")\n        \n        in_len =\
      \ self.fft_len + self.cp_len\n        for ii in range(len(input_items[0])):\n\
      \            # Do the FFT\n            #X = np.fft.fft(input_items[0][ii,(self.cp_len//2):(self.fft_len\
      \ + self.cp_len//2)])\n            offset = self.cp_len // 2\n            X\
      \ = np.fft.fft(input_items[0][ii,self.cp_len-offset:(self.fft_len + self.cp_len\
      \ - offset)])\n            X = np.fft.fftshift(X)\n            \n          \
      \  t = np.arange(0, self.fft_len)\n            X = X * np.exp(1j * t * offset\
      \ * (2*np.pi/self.fft_len))\n            \n            # estimate the timing\
      \ offset\n            pilots_idx = list(range(self.pad_l,(self.fft_len-self.pad_r),self.pilot_spacing))\n\
      \            pilots = X[pilots_idx]\n            #print(pilots_idx)\n      \
      \      #print(pilots)\n            u = np.unwrap(np.angle(pilots))\n       \
      \     phase_diffs = u[1:] - u[:-1]\n            #print(phase_diffs)\n      \
      \      mn = np.mean(phase_diffs)\n\n            #print(mn)\n            \n \
      \           # apply the phase ramp across frequency\n            \n        \
      \    X = X * np.exp(-1j * t * mn / self.pilot_spacing)\n            #X = X *\
      \ np.exp(-1j * t * self.phase_rot)\n\n            # remove cyclic prefix and\
      \ pilots\n            idx = 0\n            jj = self.pad_l+1\n            while\
      \ idx < self.nsyms:\n                n = min(self.pilot_spacing - 1, self.nsyms\
      \ - idx)\n                output_items[0][ii,idx:idx+n] = X[jj:jj+n]\n     \
      \           idx += n\n                jj += n+1\n            \n            \n\
      \        return len(output_items[0])\n \n\n"
    affinity: ''
    alias: ''
    comment: ''
    cp_len: cp_len
    fft_len: fft_len
    maxoutbuf: '0'
    minoutbuf: '0'
    nsyms: '824'
    pilot_spacing: '100'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('fft_len', '1024'), ('cp_len', '256'),
      ('nsyms', '824'), ('pilot_spacing', '100')], [('0', 'complex', 1280)], [('0',
      'complex', 824)], 'Embedded Python Block example - a simple multiply const',
      ['cp_len', 'fft_len', 'nsyms', 'pilot_spacing'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 948.0]
    rotation: 180
    state: enabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '824'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 1188.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2024, 124.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: fft_len + cp_len
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2080, 244.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: '102400'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1912, 428.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Bits
    nconnections: '1'
    size: '824'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1320, 1124.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '102400'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1440, 540.0]
    rotation: 0
    state: disabled
- name: tx_out
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: tx_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2088, 348.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: tx_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 420.0]
    rotation: 0
    state: true

connections:
- [analog_fastnoise_source_x_0, '0', blocks_add_xx_0, '0']
- [analog_random_source_x_0_1, '0', digital_constellation_encoder_bc_1_1, '0']
- [blocks_add_xx_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [blocks_char_to_float_0, '0', qtgui_time_sink_x_0_0, '1']
- [blocks_char_to_float_0_0, '0', qtgui_time_sink_x_0_0_0, '0']
- [blocks_complex_to_mag_0, '0', blocks_tag_gate_0_0, '0']
- [blocks_complex_to_mag_0, '0', qtgui_time_sink_x_0_0, '0']
- [blocks_delay_0, '0', blocks_tag_gate_0, '0']
- [blocks_moving_average_xx_0, '0', blocks_complex_to_mag_0, '0']
- [blocks_multiply_conjugate_cc_0, '0', blocks_moving_average_xx_0, '0']
- [blocks_peak_detector2_fb_0, '0', blocks_char_to_float_0, '0']
- [blocks_peak_detector2_fb_0, '0', epy_block_0, '1']
- [blocks_stream_to_tagged_stream_0, '0', qtgui_freq_sink_x_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', tx_out, '0']
- [blocks_stream_to_vector_1, '0', ofdm_symbol_rx, '0']
- [blocks_stream_to_vector_2, '0', epy_block_1, '0']
- [blocks_tag_gate_0, '0', blocks_multiply_conjugate_cc_0, '1']
- [blocks_tag_gate_0_0, '0', blocks_peak_detector2_fb_0, '0']
- [blocks_unpack_k_bits_bb_0, '0', blocks_char_to_float_0_0, '0']
- [blocks_vector_to_stream_0_0, '0', digital_constellation_decoder_cb_0, '0']
- [blocks_vector_to_stream_0_0, '0', qtgui_const_sink_x_0, '0']
- [digital_constellation_decoder_cb_0, '0', blocks_unpack_k_bits_bb_0, '0']
- [digital_constellation_encoder_bc_1_1, '0', blocks_stream_to_vector_2, '0']
- [digital_ofdm_cyclic_prefixer_0, '0', blocks_add_xx_0, '1']
- [epy_block_0, '0', blocks_stream_to_vector_1, '0']
- [epy_block_1, '0', fft_vxx_0, '0']
- [fft_vxx_0, '0', digital_ofdm_cyclic_prefixer_0, '0']
- [ofdm_symbol_rx, '0', blocks_vector_to_stream_0_0, '0']
- [virtual_source_0, '0', blocks_delay_0, '0']
- [virtual_source_0, '0', blocks_multiply_conjugate_cc_0, '0']
- [virtual_source_0, '0', epy_block_0, '0']

metadata:
  file_format: 1
  grc_version: v3.11.0.0git-352-g6efdc9d8
