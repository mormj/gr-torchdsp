/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(quantize.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(f6678145cb7db8bc3e1a6b72de91ceea)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <torchdsp/quantize.h>
// pydoc.h is automatically generated in the build directory
#include <quantize_pydoc.h>

void bind_quantize(py::module& m) {

    using quantize = ::gr::torchdsp::quantize;


    py::class_<
        quantize,
        gr::sync_block,
        gr::block,
        gr::basic_block,
        std::shared_ptr<quantize>>(m, "quantize", D(quantize))

        .def(py::init(&quantize::make), py::arg("nbits"), D(quantize, make))


        ;
}
